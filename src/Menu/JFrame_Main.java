package Menu;

import Files.WriteFile;
import Table.SearchInTable;
import VCFprocesses.TriAnalyses.GTFile;
import VCFprocesses.VCFArquive;
import VCFprocesses.VCFResults;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import jxl.write.WriteException;

/**
 * Tela que trabalha com os conteúdos da tabela VCF
 * @author eliseumedeiros
 * @version 27/10/2015
 */
public class JFrame_Main extends javax.swing.JFrame {

    //colunas
    private final static int COL_CHROM = 0;
    private final static int COL_POS = 1;    
    private final static int COL_ID = 2;
    private final static int COL_REF = 3;
    private final static int COL_ALT = 4;
    private final static int COL_QUAL = 5;
    private final static int COL_FILTER = 6;
    private final static int COL_INFO = 7;
    private final static int COL_POSINFO = 8;

    public JFrame_Main() {
        initComponents();
        this.sistema = System.getProperties().getProperty("sun.desktop");
        this.sep = (String) System.getProperties().get("file.separator");
        System.out.println(sep);
        tabelaDeBuscas = new SearchInTable();
        resultados = new VCFResults();
        jPanelLoading.setVisible(false);
        jPanelOpenFile.setVisible(false);
        jListBusca.setVisible(false);
        jScrollListBusca.setVisible(false);
        setAllComponentsVCFEnabled(false);
        //TRIO ANALISES
        gtfile = new GTFile();
        //SNPEFF
        databasesSnp = new JFrame_SnpEff_Databases();
    }
    
    /**
     * Habilitar/Desabilitar todos os pricipais componentes do programa (botóes e checkBox).
     * @param bool 
     */
    public void setAllComponentsVCFEnabled(boolean bool){
       //Botões
        jButtonBusca.setEnabled(bool);
        jButtonCH_P_ID.setEnabled(bool);
        jButtonFormat.setEnabled(bool);
        jButtonINFO.setEnabled(bool);
        jButtonOk.setEnabled(bool);
        jButtonRemoverBusca.setEnabled(bool);
       //caixas principais
        jCheckSelectAll.setEnabled(bool);
        jCheckSelectAllBox.setEnabled(bool);
        //Trio-Analyses
        jCBoxFather.setEnabled(bool);
        jCBoxMother.setEnabled(bool);
        jCBoxChild.setEnabled(bool);
        jButtonCompareSamples.setEnabled(bool);
    }
    /**
     * Criar as caixas de marcação de coluna dinâmicamente.
     */
    public void initBoxes(){
        caixas =  new javax.swing.JCheckBox[arquivoVCF.getTabela().getColumnCount()];// criando a quantidade de caixas, dinâmicamente
        caixasGeralFormat = new  javax.swing.JCheckBox[arquivoVCF.getGeralColumFormat().size()]; //criando os campos gerais da coluna format
        //setando os parâmetros das caixas de marcação
        for(int i=0; i< arquivoVCF.getTabela().getColumnCount(); i++){
            caixas[i] = new javax.swing.JCheckBox();
            caixas[i].setText(arquivoVCF.getTabela().getColunas()[i]); //colocar o nome do campo na jChechBox
            caixas[i].setBackground(new java.awt.Color(255, 255, 255));
            jPanelCheck.add(caixas[i]);
        }
        //setando os nomes gerais das caixas de marcação Format (ex: GT, GQ...)
        for(int i=0; i< arquivoVCF.getGeralColumFormat().size(); i++){
            caixasGeralFormat[i] = new javax.swing.JCheckBox();
            caixasGeralFormat[i].setText(arquivoVCF.getGeralColumFormat().get(i)); //colocar o nome do campo na jChechBox
            caixasGeralFormat[i].setBackground(new java.awt.Color(255, 255, 255));
            jPanelFormatGeral.add(caixasGeralFormat[i]);
        }
         
        setAllBoxInvible();//todas as CheckBox ficam invisíveis
        checkAllBoxes();
    }
    public void initButton(){
        
        if(arquivoVCF.getTabela().getColumnCount() < COL_INFO){
            jButtonINFO.setEnabled(false);
           jButtonFormat.setEnabled(false);
        }
        else if(arquivoVCF.getTabela().getColumnCount()== arquivoVCF.getFimInfo_column()){// quwe di\er que tem campo INFO, mas não tem campo FORMAT
            jButtonFormat.setEnabled(false);
        }
        else {
           jButtonINFO.setEnabled(true);
           jButtonFormat.setEnabled(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanelTable = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabIcon = new javax.swing.JLabel();
        jTituloTable = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanelColumnGroups = new javax.swing.JPanel();
        jCheckSelectAllBox = new javax.swing.JCheckBox();
        jButtonFormat = new javax.swing.JButton();
        jButtonINFO = new javax.swing.JButton();
        jButtonCH_P_ID = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanelCheck = new javax.swing.JPanel();
        jButtonOk = new javax.swing.JButton();
        jCheckSelectAll = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanelFormatGeral = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListBuscados = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jButtonRemoverBusca = new javax.swing.JButton();
        jPanelCompareSamples = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabResultsTrioWithFilter = new javax.swing.JLabel();
        jLabResultsTrioWithoutFilter = new javax.swing.JLabel();
        jCBoxChild = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCBoxMother = new javax.swing.JComboBox<>();
        jButtonCompareSamples = new javax.swing.JButton();
        jCBoxFather = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jCheckBoxConsiderRef = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jPanelSaveFile = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelSaveXLS = new javax.swing.JLabel();
        jLabelSaveCSV = new javax.swing.JLabel();
        jPanelResults = new javax.swing.JPanel();
        jLabelMoreResults = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableResults = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jComboBoxBusca = new javax.swing.JComboBox();
        jTextBusca = new javax.swing.JTextField();
        jScrollListBusca = new javax.swing.JScrollPane();
        jListBusca = new javax.swing.JList();
        jButtonBusca = new javax.swing.JButton();
        jButtonOpenFile = new javax.swing.JButton();
        jPanelTableLoading = new javax.swing.JPanel();
        jPanelOpenFile = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jButtonOk1 = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jRadioBExecuteSnpSift = new javax.swing.JRadioButton();
        jRadioBExecuteSnpEff = new javax.swing.JRadioButton();
        jButtonConfig = new javax.swing.JButton();
        jPanelSelectFile5 = new javax.swing.JPanel();
        jBSelectPathFile = new javax.swing.JButton();
        jTextFPathFile = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jPanelLoading = new javax.swing.JPanel();
        jLabeLoadingMsg = new javax.swing.JLabel();
        jLabelLoading1 = new javax.swing.JLabel();
        jScrollTabelaPrincipal = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemCarregar = new javax.swing.JMenuItem();
        jRadioButtonMenuItem3 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItemSair = new javax.swing.JMenuItem();
        jMenuAjuda = new javax.swing.JMenu();
        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BioInfo - Project");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 204), 1, true));
        jPanel1.setForeground(new java.awt.Color(181, 110, 110));
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(1107, 648));

        jTabbedPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane2.setForeground(new java.awt.Color(47, 77, 77));
        jTabbedPane2.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N

        jPanelTable.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTable.setForeground(new java.awt.Color(204, 204, 204));
        jPanelTable.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jPanelTable.setInheritsPopupMenu(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/icon_gene.png"))); // NOI18N

        jTituloTable.setBackground(new java.awt.Color(255, 255, 255));
        jTituloTable.setFont(new java.awt.Font("Segoe Script", 1, 24)); // NOI18N
        jTituloTable.setForeground(new java.awt.Color(47, 77, 77));
        jTituloTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTituloTable.setText("VCF - Processes");
        jTituloTable.setAutoscrolls(true);
        jTituloTable.setPreferredSize(new java.awt.Dimension(215, 40));
        jTituloTable.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel1.setForeground(new java.awt.Color(47, 77, 77));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 384, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTituloTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabIcon)
                                .addComponent(jTituloTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelTableLayout = new javax.swing.GroupLayout(jPanelTable);
        jPanelTable.setLayout(jPanelTableLayout);
        jPanelTableLayout.setHorizontalGroup(
            jPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelTableLayout.setVerticalGroup(
            jPanelTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTableLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("VCF - Processes", jPanelTable);

        jPanelColumnGroups.setBackground(new java.awt.Color(255, 255, 255));
        jPanelColumnGroups.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jCheckSelectAllBox.setBackground(new java.awt.Color(255, 255, 255));
        jCheckSelectAllBox.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckSelectAllBox.setForeground(new java.awt.Color(47, 77, 77));
        jCheckSelectAllBox.setText("select all boxes");
        jCheckSelectAllBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckSelectAllBoxActionPerformed(evt);
            }
        });

        jButtonFormat.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonFormat.setForeground(new java.awt.Color(47, 77, 77));
        jButtonFormat.setText("FORMAT");
        jButtonFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFormatActionPerformed(evt);
            }
        });

        jButtonINFO.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonINFO.setForeground(new java.awt.Color(47, 77, 77));
        jButtonINFO.setText("INFO");
        jButtonINFO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonINFOActionPerformed(evt);
            }
        });

        jButtonCH_P_ID.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonCH_P_ID.setForeground(new java.awt.Color(47, 77, 77));
        jButtonCH_P_ID.setText("Main Variations Columns");
        jButtonCH_P_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCH_P_IDActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        jPanelCheck.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCheck.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Score Column", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(31, 145, 113))); // NOI18N
        jPanelCheck.setAutoscrolls(true);
        jPanelCheck.setFocusCycleRoot(true);
        jPanelCheck.setLayout(new javax.swing.BoxLayout(jPanelCheck, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(jPanelCheck);

        jButtonOk.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jButtonOk.setForeground(new java.awt.Color(47, 77, 77));
        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jCheckSelectAll.setBackground(new java.awt.Color(255, 255, 255));
        jCheckSelectAll.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckSelectAll.setForeground(new java.awt.Color(47, 77, 77));
        jCheckSelectAll.setText("select all");
        jCheckSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckSelectAllActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(null);

        jPanelFormatGeral.setBackground(new java.awt.Color(255, 255, 255));
        jPanelFormatGeral.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(214, 255, 243), 1, true));
        jPanelFormatGeral.setLayout(new javax.swing.BoxLayout(jPanelFormatGeral, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane3.setViewportView(jPanelFormatGeral);

        javax.swing.GroupLayout jPanelColumnGroupsLayout = new javax.swing.GroupLayout(jPanelColumnGroups);
        jPanelColumnGroups.setLayout(jPanelColumnGroupsLayout);
        jPanelColumnGroupsLayout.setHorizontalGroup(
            jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelColumnGroupsLayout.createSequentialGroup()
                .addGroup(jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelColumnGroupsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonCH_P_ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonINFO, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(65, 65, 65))
                    .addGroup(jPanelColumnGroupsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jCheckSelectAllBox)
                        .addGap(34, 34, 34)))
                .addGroup(jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelColumnGroupsLayout.createSequentialGroup()
                        .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckSelectAll)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanelColumnGroupsLayout.setVerticalGroup(
            jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelColumnGroupsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonINFO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCH_P_ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jCheckSelectAllBox)
                .addGap(126, 126, 126))
            .addGroup(jPanelColumnGroupsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelColumnGroupsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonOk)
                        .addComponent(jCheckSelectAll))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Column groups", jPanelColumnGroups);

        jPanelSearch.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        jListBuscados.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jListBuscados.setSelectionBackground(new java.awt.Color(4, 204, 204));
        jScrollPane2.setViewportView(jListBuscados);

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(47, 77, 77));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/buscar2.png"))); // NOI18N
        jLabel4.setText("All Sought Items:");

        jButtonRemoverBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/remover.png"))); // NOI18N
        jButtonRemoverBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverBuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRemoverBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(572, Short.MAX_VALUE))
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonRemoverBusca)
                    .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Sought items", jPanelSearch);

        jPanelCompareSamples.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(31, 145, 113))); // NOI18N
        jPanel7.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(47, 77, 77));
        jLabel11.setText("Total with filter:");

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(47, 77, 77));
        jLabel12.setText("Total without filter:");

        jLabResultsTrioWithFilter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabResultsTrioWithFilter.setForeground(new java.awt.Color(204, 0, 0));

        jLabResultsTrioWithoutFilter.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabResultsTrioWithoutFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabResultsTrioWithFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 465, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabResultsTrioWithFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabResultsTrioWithoutFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jCBoxChild.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCBoxChild.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBoxChild.setOpaque(false);

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(47, 77, 77));
        jLabel10.setText("Child:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(47, 77, 77));
        jLabel8.setText("Parent 1:");

        jCBoxMother.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCBoxMother.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBoxMother.setOpaque(false);

        jButtonCompareSamples.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonCompareSamples.setForeground(new java.awt.Color(47, 77, 77));
        jButtonCompareSamples.setText("ok");
        jButtonCompareSamples.setDefaultCapable(false);
        jButtonCompareSamples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompareSamplesActionPerformed(evt);
            }
        });

        jCBoxFather.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jCBoxFather.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        jCBoxFather.setOpaque(false);

        jLabel6.setForeground(new java.awt.Color(47, 77, 77));
        jLabel6.setText("GENOTYPE");

        jCheckBoxConsiderRef.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxConsiderRef.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckBoxConsiderRef.setForeground(new java.awt.Color(47, 77, 77));
        jCheckBoxConsiderRef.setText("consider 0|0");
        jCheckBoxConsiderRef.setContentAreaFilled(false);

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(47, 77, 77));
        jLabel9.setText("Parent 2:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBoxFather, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBoxChild, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCBoxMother, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jCheckBoxConsiderRef)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCompareSamples, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBoxFather, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jCBoxMother, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBoxChild, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jButtonCompareSamples)
                            .addComponent(jCheckBoxConsiderRef))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trio-Analyses", jPanel8);

        javax.swing.GroupLayout jPanelCompareSamplesLayout = new javax.swing.GroupLayout(jPanelCompareSamples);
        jPanelCompareSamples.setLayout(jPanelCompareSamplesLayout);
        jPanelCompareSamplesLayout.setHorizontalGroup(
            jPanelCompareSamplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCompareSamplesLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanelCompareSamplesLayout.setVerticalGroup(
            jPanelCompareSamplesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane2.addTab("Compare Samples", jPanelCompareSamples);

        jPanelSaveFile.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(47, 77, 77));
        jLabel3.setText("Save table wich the current settings:");

        jLabelSaveXLS.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelSaveXLS.setForeground(new java.awt.Color(47, 77, 77));
        jLabelSaveXLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveXLS-clicked.png"))); // NOI18N
        jLabelSaveXLS.setText("Save Table Excel");
        jLabelSaveXLS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSaveXLSMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelSaveXLSMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelSaveXLSMouseExited(evt);
            }
        });

        jLabelSaveCSV.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelSaveCSV.setForeground(new java.awt.Color(47, 77, 77));
        jLabelSaveCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveCSV-clicked.png"))); // NOI18N
        jLabelSaveCSV.setText("Save Table CSV");
        jLabelSaveCSV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSaveCSVMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelSaveCSVMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelSaveCSVMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelSaveFileLayout = new javax.swing.GroupLayout(jPanelSaveFile);
        jPanelSaveFile.setLayout(jPanelSaveFileLayout);
        jPanelSaveFileLayout.setHorizontalGroup(
            jPanelSaveFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSaveFileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSaveFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSaveFileLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabelSaveXLS)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelSaveCSV))
                    .addComponent(jLabel3))
                .addContainerGap(651, Short.MAX_VALUE))
        );
        jPanelSaveFileLayout.setVerticalGroup(
            jPanelSaveFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSaveFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelSaveFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSaveXLS)
                    .addComponent(jLabelSaveCSV))
                .addGap(13, 13, 13))
        );

        jTabbedPane2.addTab("Save file", jPanelSaveFile);

        jPanelResults.setBackground(new java.awt.Color(255, 255, 255));

        jLabelMoreResults.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelMoreResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/moreInformation-clicked.png"))); // NOI18N
        jLabelMoreResults.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabelMoreResults.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jLabelMoreResults.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelMoreResultsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelMoreResultsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelMoreResultsMouseExited(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(47, 77, 77));
        jLabel7.setText("More Informations:");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(47, 77, 77));
        jLabel5.setText("Some Results:");

        jTableResults.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        jTableResults.setForeground(new java.awt.Color(61, 2, 2));
        jTableResults.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "result", "value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableResults.setGridColor(new java.awt.Color(85, 200, 167));
        jTableResults.setSelectionBackground(new java.awt.Color(4, 204, 204));
        jScrollPane4.setViewportView(jTableResults);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 76, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelResultsLayout = new javax.swing.GroupLayout(jPanelResults);
        jPanelResults.setLayout(jPanelResultsLayout);
        jPanelResultsLayout.setHorizontalGroup(
            jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanelResultsLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabelMoreResults)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanelResultsLayout.setVerticalGroup(
            jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelResultsLayout.createSequentialGroup()
                .addGroup(jPanelResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelResultsLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMoreResults)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Results", jPanelResults);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxBusca.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        jComboBoxBusca.setForeground(new java.awt.Color(47, 77, 77));
        jComboBoxBusca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CHROM", "POS", "ID", "REF", "ALT", "min QUAL", "FILTER" }));
        jComboBoxBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBuscaActionPerformed(evt);
            }
        });
        jPanel5.add(jComboBoxBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 90, 25));

        jTextBusca.setMinimumSize(new java.awt.Dimension(60, 20));
        jTextBusca.setPreferredSize(new java.awt.Dimension(60, 20));
        jTextBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextBuscaKeyReleased(evt);
            }
        });
        jPanel5.add(jTextBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, 150, 25));

        jScrollListBusca.setBackground(new java.awt.Color(255, 255, 255));
        jScrollListBusca.setBorder(null);

        jListBusca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListBuscaMouseClicked(evt);
            }
        });
        jScrollListBusca.setViewportView(jListBusca);

        jPanel5.add(jScrollListBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 150, 50));

        jButtonBusca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/buscar2.png"))); // NOI18N
        jButtonBusca.setFocusable(false);
        jButtonBusca.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonBusca.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscaActionPerformed(evt);
            }
        });
        jPanel5.add(jButtonBusca, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, -3, 30, 30));

        jButtonOpenFile.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonOpenFile.setForeground(new java.awt.Color(47, 77, 77));
        jButtonOpenFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/archive_open.png"))); // NOI18N
        jButtonOpenFile.setText("Open File");
        jButtonOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenFileActionPerformed(evt);
            }
        });

        jPanelTableLoading.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTableLoading.setLayout(new javax.swing.OverlayLayout(jPanelTableLoading));

        jPanelOpenFile.setBackground(new java.awt.Color(255, 255, 255));
        jPanelOpenFile.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel16.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(47, 77, 77));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Open File");

        jButtonOk1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonOk1.setForeground(new java.awt.Color(47, 77, 77));
        jButtonOk1.setText("Ok");
        jButtonOk1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOk1ActionPerformed(evt);
            }
        });

        jButtonCancel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonCancel.setForeground(new java.awt.Color(47, 77, 77));
        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(255, 255, 219));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add Annotation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(31, 145, 113))); // NOI18N

        jRadioBExecuteSnpSift.setBackground(new java.awt.Color(255, 255, 219));
        jRadioBExecuteSnpSift.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jRadioBExecuteSnpSift.setForeground(new java.awt.Color(47, 77, 77));
        jRadioBExecuteSnpSift.setText("Execute SnpSift");
        jRadioBExecuteSnpSift.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBExecuteSnpSiftActionPerformed(evt);
            }
        });

        jRadioBExecuteSnpEff.setBackground(new java.awt.Color(255, 255, 219));
        jRadioBExecuteSnpEff.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jRadioBExecuteSnpEff.setForeground(new java.awt.Color(47, 77, 77));
        jRadioBExecuteSnpEff.setText("Execute SnpEff");
        jRadioBExecuteSnpEff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioBExecuteSnpEffActionPerformed(evt);
            }
        });

        jButtonConfig.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButtonConfig.setForeground(new java.awt.Color(47, 77, 77));
        jButtonConfig.setText("Config");
        jButtonConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioBExecuteSnpEff)
                .addGap(10, 10, 10)
                .addComponent(jRadioBExecuteSnpSift)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButtonConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioBExecuteSnpSift)
                    .addComponent(jRadioBExecuteSnpEff)
                    .addComponent(jButtonConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSelectFile5.setBackground(new java.awt.Color(255, 255, 255));
        jPanelSelectFile5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select VCF File", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(31, 145, 113))); // NOI18N

        jBSelectPathFile.setFont(new java.awt.Font("Verdana", 1, 11)); // NOI18N
        jBSelectPathFile.setForeground(new java.awt.Color(47, 77, 77));
        jBSelectPathFile.setText("Select file");
        jBSelectPathFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSelectPathFileActionPerformed(evt);
            }
        });

        jLabel22.setForeground(new java.awt.Color(47, 77, 77));
        jLabel22.setText("Location:");

        javax.swing.GroupLayout jPanelSelectFile5Layout = new javax.swing.GroupLayout(jPanelSelectFile5);
        jPanelSelectFile5.setLayout(jPanelSelectFile5Layout);
        jPanelSelectFile5Layout.setHorizontalGroup(
            jPanelSelectFile5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSelectFile5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSelectFile5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addGroup(jPanelSelectFile5Layout.createSequentialGroup()
                        .addComponent(jTextFPathFile, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSelectPathFile))))
        );
        jPanelSelectFile5Layout.setVerticalGroup(
            jPanelSelectFile5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSelectFile5Layout.createSequentialGroup()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSelectFile5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFPathFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSelectPathFile))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelOpenFileLayout = new javax.swing.GroupLayout(jPanelOpenFile);
        jPanelOpenFile.setLayout(jPanelOpenFileLayout);
        jPanelOpenFileLayout.setHorizontalGroup(
            jPanelOpenFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpenFileLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addGroup(jPanelOpenFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelOpenFileLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonOk1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelSelectFile5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(335, 335, 335))
        );
        jPanelOpenFileLayout.setVerticalGroup(
            jPanelOpenFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOpenFileLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelSelectFile5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOpenFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOk1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelTableLoading.add(jPanelOpenFile);

        jPanelLoading.setBackground(new java.awt.Color(255, 255, 255));
        jPanelLoading.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabeLoadingMsg.setBackground(new java.awt.Color(255, 255, 255));
        jLabeLoadingMsg.setFont(new java.awt.Font("Segoe UI Light", 0, 26)); // NOI18N
        jLabeLoadingMsg.setForeground(new java.awt.Color(47, 77, 77));
        jLabeLoadingMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabeLoadingMsg.setText("Loading... Please wait");

        jLabelLoading1.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLoading1.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        jLabelLoading1.setForeground(new java.awt.Color(47, 77, 77));
        jLabelLoading1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLoading1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/loading-gene2.gif"))); // NOI18N

        javax.swing.GroupLayout jPanelLoadingLayout = new javax.swing.GroupLayout(jPanelLoading);
        jPanelLoading.setLayout(jPanelLoadingLayout);
        jPanelLoadingLayout.setHorizontalGroup(
            jPanelLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabeLoadingMsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1045, Short.MAX_VALUE)
            .addGroup(jPanelLoadingLayout.createSequentialGroup()
                .addComponent(jLabelLoading1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLoadingLayout.setVerticalGroup(
            jPanelLoadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLoadingLayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabeLoadingMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLoading1)
                .addGap(111, 111, 111))
        );

        jPanelTableLoading.add(jPanelLoading);

        jTablePrincipal.setAutoCreateRowSorter(true);
        jTablePrincipal.setBackground(new java.awt.Color(242, 250, 255));
        jTablePrincipal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTablePrincipal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTablePrincipal.setForeground(new java.awt.Color(61, 2, 2));
        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTablePrincipal.setAlignmentX(1.5F);
        jTablePrincipal.setAlignmentY(1.5F);
        jTablePrincipal.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTablePrincipal.setColumnSelectionAllowed(true);
        jTablePrincipal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTablePrincipal.setDoubleBuffered(true);
        jTablePrincipal.setDragEnabled(true);
        jTablePrincipal.setFillsViewportHeight(true);
        jTablePrincipal.setFocusCycleRoot(true);
        jTablePrincipal.setFocusTraversalPolicyProvider(true);
        jTablePrincipal.setGridColor(new java.awt.Color(85, 150, 167));
        jTablePrincipal.setInheritsPopupMenu(true);
        jTablePrincipal.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jTablePrincipal.setMinimumSize(new java.awt.Dimension(100, 100));
        jTablePrincipal.setRowHeight(20);
        jTablePrincipal.setRowMargin(2);
        jTablePrincipal.setSelectionBackground(new java.awt.Color(4, 204, 204));
        jTablePrincipal.setSelectionForeground(new java.awt.Color(1, 1, 1));
        jTablePrincipal.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTablePrincipal.setShowHorizontalLines(false);
        jTablePrincipal.setShowVerticalLines(false);
        jTablePrincipal.setSurrendersFocusOnKeystroke(true);
        jTablePrincipal.getTableHeader().setReorderingAllowed(false);
        jTablePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePrincipalMouseClicked(evt);
            }
        });
        jScrollTabelaPrincipal.setViewportView(jTablePrincipal);
        jTablePrincipal.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jPanelTableLoading.add(jScrollTabelaPrincipal);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanelTableLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTableLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 342, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jMenuBar1.setBackground(new java.awt.Color(144, 147, 141));
        jMenuBar1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jMenuFile.setForeground(new java.awt.Color(47, 77, 77));
        jMenuFile.setText("File");
        jMenuFile.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jMenuItemCarregar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItemCarregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/carregarImagem-icon.png"))); // NOI18N
        jMenuItemCarregar.setText("Open file");
        jMenuItemCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCarregarActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemCarregar);

        jRadioButtonMenuItem3.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButtonMenuItem3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jRadioButtonMenuItem3.setText("Save Table Excel");
        jRadioButtonMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/save_table2.png"))); // NOI18N
        jRadioButtonMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem3ActionPerformed(evt);
            }
        });
        jMenuFile.add(jRadioButtonMenuItem3);

        jMenuItem1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/save_table2.png"))); // NOI18N
        jMenuItem1.setText("Save Table CSV");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItem1);

        jMenuItemSair.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jMenuItemSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/sair.png"))); // NOI18N
        jMenuItemSair.setText("Exit");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSair);

        jMenuBar1.add(jMenuFile);

        jMenuAjuda.setBackground(new java.awt.Color(255, 255, 255));
        jMenuAjuda.setForeground(new java.awt.Color(47, 77, 77));
        jMenuAjuda.setText("Help");
        jMenuAjuda.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jRadioButtonMenuItem1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("About VCF - Processes");
        jRadioButtonMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/help.png"))); // NOI18N
        jRadioButtonMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItem1ActionPerformed(evt);
            }
        });
        jMenuAjuda.add(jRadioButtonMenuItem1);

        jMenuBar1.add(jMenuAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1051, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void caixaCheckActionPerformed() {                                           
            // TODO add your handling code here:
        for (int i=0; i< caixas.length; i++) {
            if(caixas[i].isSelected()){
                arquivoVCF.setColVisile(i);
            }
            else{
                jCheckSelectAllBox.setSelected(false);
                arquivoVCF.setColInvisible(i);
            }
            checarColunmVisible(arquivoVCF.getShowCol());
        }  
}   

    private void jMenuItemCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCarregarActionPerformed
       // jButton1ActionPerformed(evt);
       this.jPanelOpenFile.setVisible(true);
    }//GEN-LAST:event_jMenuItemCarregarActionPerformed

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemSairActionPerformed
/**
 * Verifica as caixas pertencentes ao campo de caixas gerais do botão format. ex: GT, HQ...
 */
    public void verificarCaixasGeraisFormat(){
    for (JCheckBox caixaG : caixasGeralFormat) {
                if(caixaG.isSelected()){
                    for(int i=arquivoVCF.getFimInfo_column() + 1; i< arquivoVCF.getTabela().getColumnCount(); i++){//laço das caixas format
                        
                        if(caixas[i].getText().startsWith(caixaG.getText())){ //ex: se GT_NA0001 começa com GT
                            caixas[i].setSelected(true);//seleciona a caixa respectiva
                        }
                    }
                }
                else{
                    for(int i=arquivoVCF.getFimInfo_column() + 1; i< arquivoVCF.getTabela().getColumnCount(); i++){
                        
                        if(caixas[i].getText().startsWith(caixaG.getText())){ //ex: se GT_NA0001 começa com GT
                            caixas[i].setSelected(false);//seleciona a caixa respectiva
                        }
                    }
                }
    }
}
/**
 * selecionar todas as caixas do campo de caixas do botão acionado (ex: botão format acionado).
 * @param evt 
 */
    
    private void jRadioButtonMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem1ActionPerformed
        // TODO add your handling code here:
        JFrame_Help ajuda = new JFrame_Help();
        ajuda.setDefaultCloseOperation(JFrame_Help.DISPOSE_ON_CLOSE);
        ajuda.setVisible(true);
    }//GEN-LAST:event_jRadioButtonMenuItem1ActionPerformed

    private void jRadioButtonMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItem3ActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
         JOptionPane.showMessageDialog(rootPane, "You must open some file VCF to save the Table.");
        return;
        }

        chooserSave = new JFileChooser();
        //Se não carregou o arquivo, não faz nada
        if (chooserSave.showSaveDialog(null) != JFileChooser.APPROVE_OPTION){
            return;
        }
        String caminhoArq = chooserSave.getSelectedFile().toString();
        WriteFile saveFile = new WriteFile();
        try {
            saveFile.writeExcel(caminhoArq, arquivoVCF.getShowCol(), tabelaDeBuscas.getSeachTable());
        } catch (IOException | WriteException ex) {
            JOptionPane.showMessageDialog(rootPane, "There was a problem loading the file.");
            Logger.getLogger(JFrame_Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JOptionPane.showMessageDialog(rootPane, "Saved successfully.");
    }//GEN-LAST:event_jRadioButtonMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
           if(arquivoVCF == null){
            JOptionPane.showMessageDialog(rootPane, "You must open some file VCF to save the Table.");
            return;
        }
        chooserSave = new JFileChooser();
        //Se não carregou o arquivo, não faz nada
        if (chooserSave.showSaveDialog(null) != JFileChooser.APPROVE_OPTION){
            return;
        }
        ArrayList<String> salvarArq = new ArrayList<>(); //array para salvar a tabela
        String salvarLin;
        String caminhoArq = chooserSave.getSelectedFile().toString();
        //------------- Salvando a string do título das colunas
        salvarLin = "";
        for(int col=0; col<arquivoVCF.getTabela().getColumnCount(); col++){
            if(!salvarLin.isEmpty() && arquivoVCF.getShowCol()[col])    
                salvarLin += "\t"+arquivoVCF.getTabela().getColunas()[col];
            else if(arquivoVCF.getShowCol()[col])
                salvarLin += arquivoVCF.getTabela().getColunas()[col];
        }
        salvarArq.add(salvarLin); //coloca os nomes das colunas na primeira linha do array de salvar.
       //------------- Salvano linhas
        for(int lin=0; lin<tabelaDeBuscas.getSeachTable().getRowCount(); lin++){
            salvarLin = "";
            for(int col=0; col<tabelaDeBuscas.getSeachTable().getColumnCount(); col++){
                if(!salvarLin.isEmpty())
                    salvarLin += "\t" + tabelaDeBuscas.getSeachTable().getMatrizTable()[lin][col];
                else if(arquivoVCF.getShowCol()[col])
                    salvarLin += tabelaDeBuscas.getSeachTable().getMatrizTable()[lin][col];
            }
            salvarArq.add(salvarLin);
        }
        WriteFile saveFile = new WriteFile();
        saveFile.writeFileTxt(salvarArq, caminhoArq);
        
        JOptionPane.showMessageDialog(rootPane, "Saved successfully.");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenFileActionPerformed
        // TODO add your handling code here:
        this.jPanelOpenFile.setVisible(true);
        this.jTablePrincipal.setVisible(false);
        this.jButtonOpenFile.setEnabled(false);
    }//GEN-LAST:event_jButtonOpenFileActionPerformed
    public void ativarLoading(){
        this.jPanelLoading.setVisible(true); //gif de loading
        jLabelLoading1.setVisible(true);
        jLabeLoadingMsg.setVisible(true);
        this.jTablePrincipal.setEnabled(false);
        this.jTablePrincipal.setVisible(false);
        setAllComponentsVCFEnabled(false);
        this.jButtonOpenFile.setEnabled(false);
    }
    public void desativarLoading(){
        jPanelLoading.setVisible(false);
        jLabelLoading1.setVisible(false);
        jLabeLoadingMsg.setVisible(false);
        this.jTablePrincipal.setEnabled(true);
        this.jTablePrincipal.setVisible(true);
        setAllComponentsVCFEnabled(true);
        this.jButtonOpenFile.setEnabled(true);
    }
    public void atualizarValores(){
        desativarLoading();
        this.jButtonOpenFile.setEnabled(true);
         if(arquivoVCF == null){//se ocorreu algum erro para preencher a tabela, o arquivoVCF == null
            return;
        }
        tabelaDeBuscas.getSeachTable().setColunas(arquivoVCF.getTabela().getColunas());
        tabelaDeBuscas.getSeachTable().setMatrizTable(arquivoVCF.getTabela().getMatrizTable());

        //------ caixas
        initBoxes();
        initButton();
        setAllComponentsVCFEnabled(true);
        jLabelSaveCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveCSV.png")));
        jLabelSaveXLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveXLS.png")));
        jLabelMoreResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/moreInformation.png")));
        //CAMPO DE ANÁLISE EM TRIO - Colocando os nomes das amostras
        atualizaAmostrasTrio();
        resultados.setTotalAmostras(arquivoVCF.getSamples().size());//atualiza o total de amostras
    }
    private void jListBuscaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListBuscaMouseClicked
        // TODO add your handling code here:
        String descricaoClicada = (String) jListBusca.getSelectedValue();
        //Insere o nome da descrição no campo de busca
        jTextBusca.setText(descricaoClicada);
        //Limpa a lista de resultados iterativos de busca
        tabelaDeBuscas.clearListaModels();
        jListBusca.setVisible(false);
        jScrollListBusca.setVisible(false);
    }//GEN-LAST:event_jListBuscaMouseClicked

    private void jButtonBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscaActionPerformed
        // TODO add your handling code here:
        String rotulo = jTextBusca.getText();
        jTextBusca.setText("");
        //Se não tiver nada digitado na busca, não há o que fazer
        if (arquivoVCF == null || rotulo.isEmpty()){
            return;
        }
        String coluna = (String)jComboBoxBusca.getSelectedItem();
        switch (coluna) {
            case "CHROM":
            tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_CHROM);
            break;
            case "POS":
            tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_POS);
            break;
            case "ID":
            tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_ID);
            break;
            case "REF":
            tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_REF);
            break;
            case "ALT":
            tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_ALT);
            break;
            case "min QUAL":
            try{
                tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_QUAL);
            }catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "It came to seek the QUAL column element. Enter a value of type Double");
            }
            break;
            case "FILTER":
            tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_FILTER);
            break;
            default:
                tabelaDeBuscas.buscaElementoEGeraMatriz(rotulo, tabelaDeBuscas.getSeachTable(), COL_FILTER);
        }
        jTablePrincipal.setModel(tabelaDeBuscas.getSeachTable());
        resultados.setTotalAmostras(arquivoVCF.getSamples().size());//atualiza o total de amostras
        resultados.atualizarResultados(tabelaDeBuscas.getSeachTable());//atualizando dados da tabela de resultados
        jTableResults.setModel(new javax.swing.table.DefaultTableModel(
            resultados.getTabelaGeralResults().getMatrizTable(),
            resultados.getTabelaGeralResults().getColunas()
        ));
        checarColunmVisible(arquivoVCF.getShowCol());

        //colocando a tabela de buscas na tabela principal
        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            tabelaDeBuscas.getSeachTable().getMatrizTable(),
            arquivoVCF.getTabela().getColunas()
        ));
        jTablePrincipal.setModel(tabelaDeBuscas.getSeachTable());
        jListBuscados.setModel(tabelaDeBuscas.getListaSoughtItems());

        //Limpa a lista de imagens anteriores
        tabelaDeBuscas.clearListaModels();
        //COLOCANDO RESULTADOS NO CAMPO RESULTS_TRIO
        jLabResultsTrioWithFilter.setText(tabelaDeBuscas.getSeachTable().getRowCount()+"");
        jLabResultsTrioWithoutFilter.setText(arquivoVCF.getTabela().getRowCount()+"");
        caixaCheckActionPerformed();
    }//GEN-LAST:event_jButtonBuscaActionPerformed

    private void jTextBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBuscaKeyReleased
        // TODO add your handling code here:
        if(arquivoVCF == null){
            jListBusca.setVisible(false);
            jScrollListBusca.setVisible(false);
            return;
        }
        jListBusca.setVisible(true);
        jScrollListBusca.setVisible(true);
        //Pega o que o usuário digitou até o momento para a busca
        String digitado = jTextBusca.getText();
        //Busca todas as descrições que começam com o texto digitado
        String coluna = (String)jComboBoxBusca.getSelectedItem();
        ArrayList<String> listaDeRotulos = new ArrayList<>();

        switch (coluna) {
            case "CHROM":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_CHROM);
            break;
            case "POS":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_POS);
            break;
            case "ID":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_ID);
            break;
            case "REF":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_REF);
            break;
            case "ALT":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_ALT);
            break;
            case "QUAL":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_QUAL);
            break;
            case "FILTER":
            listaDeRotulos = tabelaDeBuscas.getDescricoesComInicio(digitado, tabelaDeBuscas.getSeachTable(), COL_FILTER);
        }
        tabelaDeBuscas.clearListaModels();
        tabelaDeBuscas.setListaModels(listaDeRotulos);
        //Coloca todas as descrições na lista de resultados em tempo real
        jListBusca.setModel(tabelaDeBuscas.getListaModels());
        if (!listaDeRotulos.isEmpty()){
            jScrollListBusca.setVisible(true);
            jListBusca.setVisible(true);
        }
        else{
            jListBusca.setVisible(false);
            jScrollListBusca.setVisible(false);
        }
    }//GEN-LAST:event_jTextBuscaKeyReleased

    private void jComboBoxBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxBuscaActionPerformed

    private void jLabelMoreResultsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMoreResultsMouseExited
        // TODO add your handling code here:
        if(arquivoVCF!=null)
        jLabelMoreResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/moreInformation.png")));
    }//GEN-LAST:event_jLabelMoreResultsMouseExited

    private void jLabelMoreResultsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMoreResultsMouseEntered
        // TODO add your handling code here:
        if(arquivoVCF!=null)
        jLabelMoreResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/moreInformation-passed.png")));
    }//GEN-LAST:event_jLabelMoreResultsMouseEntered

    private void jLabelMoreResultsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelMoreResultsMouseClicked
        // TODO add your handling code here:
        if(arquivoVCF!=null){
            jLabelMoreResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/moreInformation-clicked.png")));
            resultados.setTotalAmostras(arquivoVCF.getSamples().size());//atualiza o total de amostras
            resultados.atualizarResultados(tabelaDeBuscas.getSeachTable());//atualizando dados da tabela de resultados
            JFrame_Informations moreInformations = new JFrame_Informations(resultados);
            moreInformations.setDefaultCloseOperation(JFrame_Informations.DISPOSE_ON_CLOSE);
            moreInformations.setVisible(true);
        }
    }//GEN-LAST:event_jLabelMoreResultsMouseClicked

    private void jLabelSaveCSVMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSaveCSVMouseExited
        // TODO add your handling code here:
        if(arquivoVCF!=null)
        jLabelSaveCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveCSV.png")));
    }//GEN-LAST:event_jLabelSaveCSVMouseExited

    private void jLabelSaveCSVMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSaveCSVMouseEntered
        // TODO add your handling code here:
        if(arquivoVCF!=null)
        jLabelSaveCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveCSV-passed.png")));
    }//GEN-LAST:event_jLabelSaveCSVMouseEntered

    private void jLabelSaveCSVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSaveCSVMouseClicked
        // TODO add your handling code here:
        if(arquivoVCF == null){
            JOptionPane.showMessageDialog(rootPane, "You must open some file VCF to save the Table.");
            return;
        }
        jLabelSaveCSV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveCSV-clicked.png")));

        chooserSave = new JFileChooser();
        //Se não carregou o arquivo, não faz nada
        if (chooserSave.showSaveDialog(null) != JFileChooser.APPROVE_OPTION){
            return;
        }
        ArrayList<String> salvarArq = new ArrayList<>(); //array para salvar a tabela
        String salvarLin;
        String caminhoArq = chooserSave.getSelectedFile().toString();
        //------------- Salvando a string do título das colunas
        salvarLin = "";
        for(int col=0; col<arquivoVCF.getTabela().getColumnCount(); col++){
            if(!salvarLin.isEmpty() && arquivoVCF.getShowCol()[col])
            salvarLin += "\t"+arquivoVCF.getTabela().getColunas()[col];
            else if(arquivoVCF.getShowCol()[col])
            salvarLin += arquivoVCF.getTabela().getColunas()[col];
        }
        salvarArq.add(salvarLin); //coloca os nomes das colunas na primeira linha do array de salvar.
        //------------- Salvando linhas
        for(int lin=0; lin<tabelaDeBuscas.getSeachTable().getRowCount(); lin++){
            salvarLin = "";
            for(int col=0; col<tabelaDeBuscas.getSeachTable().getColumnCount(); col++){
                if(!salvarLin.isEmpty())
                salvarLin += "\t" + tabelaDeBuscas.getSeachTable().getMatrizTable()[lin][col];
                else if(arquivoVCF.getShowCol()[col])
                salvarLin += tabelaDeBuscas.getSeachTable().getMatrizTable()[lin][col];
            }
            salvarArq.add(salvarLin);
        }
        WriteFile saveFile = new WriteFile();
        saveFile.writeFileTxt(salvarArq, caminhoArq);

        JOptionPane.showMessageDialog(rootPane, "Saved successfully.");

    }//GEN-LAST:event_jLabelSaveCSVMouseClicked

    private void jLabelSaveXLSMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSaveXLSMouseExited
        // TODO add your handling code here:
        if(arquivoVCF!=null)
        jLabelSaveXLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveXLS.png")));
    }//GEN-LAST:event_jLabelSaveXLSMouseExited

    private void jLabelSaveXLSMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSaveXLSMouseEntered
        // TODO add your handling code here:
        if(arquivoVCF!=null)
        jLabelSaveXLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveXLS-passed.png")));
    }//GEN-LAST:event_jLabelSaveXLSMouseEntered

    private void jLabelSaveXLSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSaveXLSMouseClicked
        // TODO add your handling code here:
        if(arquivoVCF == null){
            JOptionPane.showMessageDialog(rootPane, "You must open some file VCF to save the Table.");
            return;
        }
        jLabelSaveXLS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/saveXLS-clicked.png")));

        chooserSave = new JFileChooser();
        //Se não carregou o arquivo, não faz nada
        if (chooserSave.showSaveDialog(null) != JFileChooser.APPROVE_OPTION){
            return;
        }
        String caminhoArq = chooserSave.getSelectedFile().toString();
        WriteFile saveFile = new WriteFile();
        try {
            saveFile.writeExcel(caminhoArq, arquivoVCF.getShowCol(), tabelaDeBuscas.getSeachTable());
        } catch (IOException | WriteException ex) {
            JOptionPane.showMessageDialog(rootPane, "There was a problem loading the file.");
            Logger.getLogger(JFrame_Main.class.getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(rootPane, "Saved successfully.");
    }//GEN-LAST:event_jLabelSaveXLSMouseClicked

    private void jButtonCompareSamplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompareSamplesActionPerformed
        // TODO add your handling code here:
        if(jCheckBoxConsiderRef.isSelected()) //VERIFICA SE DEVEMOS CONSIDERAR O 0/0  como homozigoto na pesquisa
            gtfile.setConsiderRef(true);
        else
            gtfile.setConsiderRef(false);
        gtfile.setChild(jCBoxChild.getSelectedItem()+ "");
        gtfile.setFather(jCBoxFather.getSelectedItem()+ "");
        gtfile.setMother(jCBoxMother.getSelectedItem()+ "");
        //descobrindo qual é o valor da COLUNA do pai, mãe e filho para análise em trio
        if(gtfile.isAnyEmpy()){
            //buscando numeração da colna de father, mother e child na tabela geral
            for(int i=COL_POSINFO; i<tabelaDeBuscas.getSeachTable().getColumnCount(); i++){
                if(tabelaDeBuscas.getSeachTable().getColumnName(i).equals("GT_"+gtfile.getFather())){//se a coluna respectiva é o GT do pai
                    gtfile.setNumFather(i);
                }else if(tabelaDeBuscas.getSeachTable().getColumnName(i).equals("GT_"+gtfile.getMother())){//ou se é o GT da mãe
                    gtfile.setNumMother(i);
                }else if(tabelaDeBuscas.getSeachTable().getColumnName(i).equals("GT_"+gtfile.getChild())){//ou se é o GT do filho
                    gtfile.setNumChild(i);
                }
            }
            tabelaDeBuscas.buscaTrioAnalyses(gtfile, tabelaDeBuscas.getSeachTable());
            System.out.println(arquivoVCF.getSamples().size());
            resultados.setTotalAmostras(arquivoVCF.getSamples().size());//atualiza o total de amostras
            resultados.atualizarResultados(tabelaDeBuscas.getSeachTable());//atualizando dados da tabela de resultados

            jTableResults.setModel(new javax.swing.table.DefaultTableModel(
                resultados.getTabelaGeralResults().getMatrizTable(),
                resultados.getTabelaGeralResults().getColunas()
            ));
            checarColunmVisible(arquivoVCF.getShowCol());

            //colocando a tabela de buscas na tabela principal
            jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
                tabelaDeBuscas.getSeachTable().getMatrizTable(),
                arquivoVCF.getTabela().getColunas()
            ));
            jTablePrincipal.setModel(tabelaDeBuscas.getSeachTable());
            jListBuscados.setModel(tabelaDeBuscas.getListaSoughtItems());

            //Limpa a lista de imagens anteriores
            tabelaDeBuscas.clearListaModels();
            //COLOCANDO RESULTADOS NO CAMPO RESULTS_TRIO
            jLabResultsTrioWithFilter.setText(tabelaDeBuscas.getSeachTable().getRowCount()+"");
            jLabResultsTrioWithoutFilter.setText(arquivoVCF.getTabela().getRowCount()+"");
        }else
        System.out.print("algo errado!");

    }//GEN-LAST:event_jButtonCompareSamplesActionPerformed

/**
 * Desfazer uma busca realizada. 
 * @param evt 
 */
    private void jButtonRemoverBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverBuscaActionPerformed
        // TODO add your handling code here:
        if(jListBuscados.getSelectedValue() == null){
            return;
        }
        String descricaoClicada = (String) jListBuscados.getSelectedValue();

        String[] colAndDescricao= descricaoClicada.split(":");
        String coluna = colAndDescricao[0];
        String descricao = colAndDescricao[1];
        tabelaDeBuscas.removeListaSoughtItems(coluna, descricao.substring(3));//remover elemento buscado

        jListBuscados.setModel(tabelaDeBuscas.getListaSoughtItems());//atualizando a lista de buscas

        tabelaDeBuscas.atualizarTabelaBuscas(arquivoVCF.getTabela());//atualizar tabela de bucas com o elemento removido
        //atualizando tabela com os elementos buscados
        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            tabelaDeBuscas.getSeachTable().getMatrizTable(),
            tabelaDeBuscas.getSeachTable().getColunas()
        ));
        resultados.setTotalAmostras(arquivoVCF.getSamples().size());//atualiza o total de amostras
        resultados.atualizarResultados(tabelaDeBuscas.getSeachTable());//atualizando dados da tabela de resultados
        jTableResults.setModel(new javax.swing.table.DefaultTableModel(
            resultados.getTabelaGeralResults().getMatrizTable(),
            resultados.getTabelaGeralResults().getColunas()
        ));
        checarColunmVisible(arquivoVCF.getShowCol());//atualiza colunas que dever estar visíveis
        //TRIO
        jLabResultsTrioWithFilter.setText("");
        jLabResultsTrioWithoutFilter.setText("");
    }//GEN-LAST:event_jButtonRemoverBuscaActionPerformed

    private void jCheckSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckSelectAllActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
            return;
        }
        if(caixas[0].isVisible()){//se o botão de visualização CROMO foi selecionado.
            if(jCheckSelectAll.isSelected()){//se a caixaG select all está marcada
                for(int i=0; i<7; i++){
                    caixas[i].setSelected(true);
                }
            }
            else{
                for(int i=0; i<7; i++){
                    caixas[i].setSelected(false);
                }
            }
        }

        else if(caixas[7].isVisible()){ //campos do terceiro botão - INFO
            if(jCheckSelectAll.isSelected()){//se a caixaG select all está marcada
                for(int i=7; i<=arquivoVCF.getFimInfo_column(); i++){
                    caixas[i].setSelected(true);
                }
            }
            else{
                for(int i=7; i<=arquivoVCF.getFimInfo_column(); i++){
                    caixas[i].setSelected(false);
                }
            }
        }
        else if(caixas[arquivoVCF.getFimInfo_column()+1].isVisible()){ //FORMAT
            if(jCheckSelectAll.isSelected()){//se a caixaG select all está marcada
                for(int i=arquivoVCF.getFimInfo_column()+1; i<arquivoVCF.getTabela().getColumnCount(); i++){
                    caixas[i].setSelected(true);
                }
                for (JCheckBox caixaG : caixasGeralFormat) {
                    caixaG.setSelected(true);
                }
            }
            else{
                for(int i=arquivoVCF.getFimInfo_column()+1; i<arquivoVCF.getTabela().getColumnCount(); i++){
                    caixas[i].setSelected(false);
                }
                for (JCheckBox caixaG : caixasGeralFormat) {
                    caixaG.setSelected(false);
                }
            }
        }
    }//GEN-LAST:event_jCheckSelectAllActionPerformed

                                          
/**
 * Botão de realizar as modificações das caixas de seleção.
 * @param evt 
 */
    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
            return;
        }
        if(!arquivoVCF.getGeralColumFormat().isEmpty() && caixasGeralFormat[0].isVisible()){// checar modificação no campo format
            verificarCaixasGeraisFormat();
        }
        caixaCheckActionPerformed();
    }                                         
//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCH_P_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCH_P_IDActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
            return;
        }
        setAllBoxInvible();
        jCheckSelectAll.setSelected(false);
        caixas[COL_CHROM].setVisible(true);
        caixas[COL_ID].setVisible(true);
        caixas[COL_POS].setVisible(true);
        caixas[COL_REF].setVisible(true);
        caixas[COL_ALT].setVisible(true);
        caixas[COL_QUAL].setVisible(true);
        caixas[COL_FILTER].setVisible(true);
    }//GEN-LAST:event_jButtonCH_P_IDActionPerformed

    private void jButtonINFOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonINFOActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
            return;
        }
        setAllBoxInvible();
        jCheckSelectAll.setSelected(false);
        if(arquivoVCF.getTabela().getColumnCount()>= COL_INFO){//saber se existe o campo info, no carquivo lido
            for(int i=7; i<= arquivoVCF.getFimInfo_column(); i++){
                caixas[i].setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonINFOActionPerformed

    private void jButtonFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFormatActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
            return;
        }
        setAllBoxInvible();
        jCheckSelectAll.setSelected(false);
        if(!arquivoVCF.getGeralColumFormat().isEmpty()){ //saber se existe o campo format no arquivo lido
            for(int i=arquivoVCF.getFimInfo_column() + 1; i< arquivoVCF.getTabela().getColumnCount(); i++){
                caixas[i].setVisible(true);
            }
        }
        for (JCheckBox caixaG : caixasGeralFormat) {
            caixaG.setVisible(true);
        }
    }//GEN-LAST:event_jButtonFormatActionPerformed

    private void jCheckSelectAllBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckSelectAllBoxActionPerformed
        // TODO add your handling code here:
        if(arquivoVCF == null){
            return;
        }
        //se a caixaG selectAll estiver marcada, ela marca todas as CheckBox
        if(jCheckSelectAllBox.isSelected()){
            checkAllBoxes();
            jCheckSelectAll.setSelected(true);
            arquivoVCF.setAllShowColVisible();

        }
        else{
            uncheckAllBoxes();
            arquivoVCF.setAllShowColInvisible();
        }
        checarColunmVisible(arquivoVCF.getShowCol());
    }//GEN-LAST:event_jCheckSelectAllBoxActionPerformed

    private void jTablePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseClicked
        // TODO add your handling code here:

        if(evt.getClickCount()==2){
            if(jTablePrincipal.getColumnSelectionAllowed())
            jTablePrincipal.setColumnSelectionAllowed(false);
            else
            jTablePrincipal.setColumnSelectionAllowed(true);
        }
    }//GEN-LAST:event_jTablePrincipalMouseClicked

    private void jButtonConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfigActionPerformed
        // TODO add your handling code here:
        databasesSnp.setVisible(true);
    }//GEN-LAST:event_jButtonConfigActionPerformed

    private void jButtonOk1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOk1ActionPerformed
        // TODO add your handling code here:
        final boolean JUSTSEP = true, NOTSEP = false;
        this.jPanelOpenFile.setVisible(false);
        //Se caso ocorer algum erro, não faz nada além de retornar
        if (this.jTextFPathFile.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "You need to select a file.");
            jButtonOpenFile.setEnabled(true);
            return;
        }
        ativarLoading();
        if(jRadioBExecuteSnpEff.isSelected() || jRadioBExecuteSnpSift.isSelected()){

            if(jRadioBExecuteSnpEff.isSelected()){
                if(databasesSnp.getCaminho().isEmpty()){
                    desativarLoading();
                    JOptionPane.showMessageDialog(null, "You need to select a SnpEff database. Please, go to select \"config\" and select a SnpEff database");
                    return;
                }
                new Thread(){
                        @Override
                        public void run(){
                            //executar o camando do SnpEff
                            preencherTabela(chooser.getSelectedFile().toString(), jRadioBExecuteSnpEff.isSelected(), JUSTSEP);//criando novo arquivo sem repetições de linhas
                            System.out.println(chooser.getSelectedFile().toString());
                            String[] nomeCompleto = chooser.getSelectedFile().toString().replace(String.format("\\"),"/").split("/");
                            String nomeCaminho= "";
                            for(int i=0; i< nomeCompleto.length-1; i++)
                                nomeCaminho += nomeCompleto[i] + sep;
                            String nomeNovoArquivo = nomeCompleto[nomeCompleto.length-1].replace(".vcf", "")+".SnpEffAnnotated.vcf";
                            String comando = "java"+ databasesSnp.getMemory()+" -jar "+System.getProperty("user.dir")+sep+"snpEff"+sep+"snpEff.jar eff -canon -ud 0 -o vcf "+ databasesSnp.getCaminho() + " "+ chooser.getSelectedFile().toString().replace(".vcf", "")+"SEP.vcf" + " > " + nomeCaminho + nomeNovoArquivo;
                            System.out.println(databasesSnp.getComandoConsole()+ comando);

                            try {
                                Process tr = Runtime.getRuntime().exec( databasesSnp.getComandoConsole() + comando);
                                BufferedReader stdOut=new BufferedReader(new InputStreamReader(tr.getInputStream()));
                                String s;
                                while((s=stdOut.readLine())!=null){
                                }
                                System.out.println(s);
//                              Process p = Runtime.getRuntime().exec(databasesSnp.getComandoConsole() + comando);
//                                    p.waitFor();
                                Runtime.getRuntime().exec(databasesSnp.getComandoConsole() + databasesSnp.getDeletar()+" "+ chooser.getSelectedFile().toString().replace(".vcf", "")+"SEP.vcf");
                                System.out.println("Executado com sucesso");
                                } catch (IOException ex) {
                                    JOptionPane.showMessageDialog(null, "Sorry, SNPEff could not run.");
                                } 
                                System.out.println(nomeCaminho+nomeNovoArquivo);
                                preencherTabela(nomeCaminho+nomeNovoArquivo, false, NOTSEP);
                                atualizarValores();
                        }
                    }.start();
            }
            if(jRadioBExecuteSnpSift.isSelected()){
                if(databasesSnp.getdbSelected().isEmpty()){
                    desativarLoading();
                    JOptionPane.showMessageDialog(null, "You need to select a SnpSift database. Please, go to select \"config\" and select a SnpSift database");
                    return;
                }
                new Thread(){
                        @Override
                        public void run(){
                            //executar o camando do SnpSift
                            //JOptionPane.showMessageDialog(null, "SNPSift will run before opening your file. This may take several minutes.");
                            preencherTabela(chooser.getSelectedFile().toString(), jRadioBExecuteSnpSift.isSelected(), JUSTSEP);//criando novo arquivo sem repetições de linhas
                            String[] nomeCompleto = chooser.getSelectedFile().toString().replace(String.format("\\"),"/").split("/");
                            String nomeCaminho= "";
                            for(int i=0; i< nomeCompleto.length-1; i++)
                                nomeCaminho += nomeCompleto[i] +sep;
                            String nomeNovoArquivo;
                            nomeNovoArquivo = nomeCompleto[nomeCompleto.length-1].replace(".vcf", "")+".SnpSiftAnnotated.vcf";
                            String comando = "java"+ databasesSnp.getMemory()+" -jar "+System.getProperty("user.dir")+sep+"snpEff"+sep+"SnpSift.jar dbnsfp -f Interpro_domain,Ancestral_allele,SIFT_score,SIFT_pred,Polyphen2_HDIV_score,Polyphen2_HDIV_pred,Polyphen2_HVAR_score,Polyphen2_HVAR_pred,LRT_score,LRT_pred,MutationTaster_score,MutationTaster_pred,MutationAssessor_score,MutationAssessor_pred,FATHMM_score,FATHMM_pred,MetaSVM_score,MetaSVM_pred,MetaLR_score,MetaLR_pred,PROVEAN_score,PROVEAN_pred -v -a -db "+ databasesSnp.getdbSelected()+" " + chooser.getSelectedFile().toString().replace(".vcf", "")+"SEP.vcf" + " > " + nomeCaminho + nomeNovoArquivo;
                            System.out.println(databasesSnp.getComandoConsole() + comando);
                            try {
                                Process tr = Runtime.getRuntime().exec( databasesSnp.getComandoConsole() + comando);
                                BufferedReader stdOut=new BufferedReader(new InputStreamReader(tr.getInputStream()));
                                String s;
                                while((s=stdOut.readLine())!=null){
                                }
                                System.out.println(s);
//                                Process p = Runtime.getRuntime().exec(databasesSnp.getComandoConsole() + comando);
//                                    p.waitFor();
                                    Runtime.getRuntime().exec(databasesSnp.getComandoConsole() + databasesSnp.getDeletar() + " "+chooser.getSelectedFile().toString().replace(".vcf", "")+"SEP.vcf");
                                    System.out.println("Executado com sucesso");
                                } catch (IOException ex) {
                                    JOptionPane.showMessageDialog(null, "Sorry, SNPSift could not run.");
                                }
                            System.out.println(nomeCaminho+nomeNovoArquivo);
                            preencherTabela(nomeCaminho+nomeNovoArquivo, false, NOTSEP);
                            atualizarValores();
                        }
                }.start();
            }
        }
        else{
             new Thread(){
                        @Override
                        public void run(){
                            preencherTabela(chooser.getSelectedFile().toString(), jRadioBExecuteSnpSift.isSelected(), false);
                            atualizarValores();
                        }
             }.start();
            }
    }//GEN-LAST:event_jButtonOk1ActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        // TODO add your handling code here:
        this.jPanelOpenFile.setVisible(false);
        this.jTablePrincipal.setVisible(true);
        this.jButtonOpenFile.setEnabled(true);
                
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jRadioBExecuteSnpSiftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBExecuteSnpSiftActionPerformed
        // TODO add your handling code here:
        if(jRadioBExecuteSnpSift.isSelected()){
            jRadioBExecuteSnpSift.setSelected(true);
            jRadioBExecuteSnpEff.setSelected(false);
        }
        else{
            jRadioBExecuteSnpSift.setSelected(false);
        }
    }//GEN-LAST:event_jRadioBExecuteSnpSiftActionPerformed

    private void jRadioBExecuteSnpEffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioBExecuteSnpEffActionPerformed
        // TODO add your handling code here:
        if(jRadioBExecuteSnpEff.isSelected()){
            jRadioBExecuteSnpSift.setSelected(false);
            jRadioBExecuteSnpEff.setSelected(true);
        }
        else{
            jRadioBExecuteSnpEff.setSelected(false);
        }
    }//GEN-LAST:event_jRadioBExecuteSnpEffActionPerformed

    private void jBSelectPathFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSelectPathFileActionPerformed
        // TODO add your handling code here:
        this.chooser = new JFileChooser();
        //Se caso ocorer algum erro, não faz nada além de retornar
        if (this.chooser.showOpenDialog(null) != JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(null, "Select a file.");
            return;
        }
        this.jTextFPathFile.setText(this.chooser.getSelectedFile().toString());

    }//GEN-LAST:event_jBSelectPathFileActionPerformed
    /**
     * CAMPO DE ANÁLISE EM TRIO - Colocando os nomes das amostras
     */
    private void atualizaAmostrasTrio(){
        for(String a : arquivoVCF.getSamples()){
            jCBoxMother.addItem(a);
            jCBoxFather.addItem(a);
            jCBoxChild.addItem(a);
        }
 
    }  /**
   * Seleciona todas as CheckBox.
   */ 
    public void checkAllBoxes(){
        for (JCheckBox caixa : caixas) {
            caixa.setSelected(true);
        }
        for (JCheckBox caixaG : caixasGeralFormat) {
            caixaG.setSelected(true);
        }
        jCheckSelectAllBox.setSelected(true);
        arquivoVCF.setAllShowColVisible();
    }
    /**
     * desmarca todas as caixas (CheckBox).
     */
    public void uncheckAllBoxes(){
        for (JCheckBox caixa : caixas) {
            caixa.setSelected(false);
        }
        for (JCheckBox caixaG : caixasGeralFormat) {
            caixaG.setSelected(false);
        }
            arquivoVCF.setAllShowColInvisible();
    }
/**
 * Deixa todas as CheckBox invisíveis.
 */ 
    private void setAllBoxInvible(){
        for (JCheckBox caixa : caixas) {
            caixa.setVisible(false);
        }
        for (JCheckBox caixaG : caixasGeralFormat) {
            caixaG.setVisible(false);
        }
    }
    /**
     * Preencher os dados da tabela de acordo com o Arquivo VCF.
     * @param endereco
     */
    public void preencherTabela(String endereco, boolean executeSNP, boolean justSepFile){
        try {
            arquivoVCF = new VCFArquive(endereco, executeSNP);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "There was a problem loading the file.");
            arquivoVCF=null;
            return;
        }
        if(!justSepFile){
            jTablePrincipal.setModel(arquivoVCF.getTabela());
             checarColunmVisible(arquivoVCF.getShowCol());
             resultados.setTotalAmostras(arquivoVCF.getSamples().size());//atualiza o total de amostras
             resultados.atualizarResultados(arquivoVCF.getTabela());//atualizando dados da tabela de resultados
             jTableResults.setModel(new javax.swing.table.DefaultTableModel(
                         resultados.getTabelaGeralResults().getMatrizTable(),
                         resultados.getTabelaGeralResults().getColunas()
                     )); 
        }
    }
    /**
     * irá checar quais são as colunas que devem ser visíveis
     * @param visible 
     */
    public void checarColunmVisible(boolean [] visible){
       //jTablePrincipal.getRowHeight(WIDTH);
        for(int i=0; i<visible.length; i++){
            if(!visible[i]){
                jTablePrincipal.getColumnModel().getColumn( i ).setMaxWidth( 0 );  
                jTablePrincipal.getColumnModel().getColumn( i ).setMinWidth( 0 );  
                jTablePrincipal.getTableHeader().getColumnModel().getColumn( i ).setMaxWidth( 0 );
             
            }
            else{
                if(jTablePrincipal.getColumnModel().getColumn( i ).getMinWidth() == 0){
                    jTablePrincipal.getColumnModel().getColumn( i ).setMaxWidth( 1000 );  
                    jTablePrincipal.getColumnModel().getColumn( i ).setMinWidth( 10);  
                    jTablePrincipal.getColumnModel().getColumn( i ).setPreferredWidth(100);
                    jTablePrincipal.getTableHeader().getColumnModel().getColumn( i ).setMaxWidth( 1000);
                }
            }
        }
    }

    /**
     * Classe principal.
     * @param args
     * @throws ClassNotFoundException
     * @throws InstantiationException
     * @throws IllegalAccessException
     * @throws UnsupportedLookAndFeelException 
     */
    public static void main(String args[]) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        String lookAndFeel = UIManager.getSystemLookAndFeelClassName();
        UIManager.setLookAndFeel(lookAndFeel);
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JFrame_Main().setVisible(true);
            }
        });
    }
    private final String sep;
    private final String sistema;
    private JFileChooser chooser;
    private JFrame_SnpEff_Databases databasesSnp; //Configurações dos comandos do SNPEff
    private JFileChooser chooserSave;
    private VCFArquive arquivoVCF;
    private javax.swing.JCheckBox[] caixas;//gera as caixas de marcação de coluna, dinâmicamente
    private javax.swing.JCheckBox[] caixasGeralFormat;
    private SearchInTable tabelaDeBuscas;
    private VCFResults resultados;
    //TRIO ANÁLISES
    private GTFile gtfile;
    //https://www.youtube.com/watch?v=Qvq6NneeKU0
    private ImageIcon icon;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBSelectPathFile;
    private javax.swing.JButton jButtonBusca;
    private javax.swing.JButton jButtonCH_P_ID;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCompareSamples;
    private javax.swing.JButton jButtonConfig;
    private javax.swing.JButton jButtonFormat;
    private javax.swing.JButton jButtonINFO;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonOk1;
    private javax.swing.JButton jButtonOpenFile;
    private javax.swing.JButton jButtonRemoverBusca;
    private javax.swing.JComboBox<String> jCBoxChild;
    private javax.swing.JComboBox<String> jCBoxFather;
    private javax.swing.JComboBox<String> jCBoxMother;
    private javax.swing.JCheckBox jCheckBoxConsiderRef;
    private javax.swing.JCheckBox jCheckSelectAll;
    private javax.swing.JCheckBox jCheckSelectAllBox;
    private javax.swing.JComboBox jComboBoxBusca;
    private javax.swing.JLabel jLabIcon;
    private javax.swing.JLabel jLabResultsTrioWithFilter;
    private javax.swing.JLabel jLabResultsTrioWithoutFilter;
    private javax.swing.JLabel jLabeLoadingMsg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelLoading1;
    private javax.swing.JLabel jLabelMoreResults;
    private javax.swing.JLabel jLabelSaveCSV;
    private javax.swing.JLabel jLabelSaveXLS;
    private javax.swing.JList jListBusca;
    private javax.swing.JList jListBuscados;
    private javax.swing.JMenu jMenuAjuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemCarregar;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelCheck;
    private javax.swing.JPanel jPanelColumnGroups;
    private javax.swing.JPanel jPanelCompareSamples;
    private javax.swing.JPanel jPanelFormatGeral;
    private javax.swing.JPanel jPanelLoading;
    private javax.swing.JPanel jPanelOpenFile;
    private javax.swing.JPanel jPanelResults;
    private javax.swing.JPanel jPanelSaveFile;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelSelectFile5;
    private javax.swing.JPanel jPanelTable;
    private javax.swing.JPanel jPanelTableLoading;
    private javax.swing.JRadioButton jRadioBExecuteSnpEff;
    private javax.swing.JRadioButton jRadioBExecuteSnpSift;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem3;
    private javax.swing.JScrollPane jScrollListBusca;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollTabelaPrincipal;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTablePrincipal;
    private javax.swing.JTable jTableResults;
    private javax.swing.JTextField jTextBusca;
    private javax.swing.JTextField jTextFPathFile;
    private javax.swing.JLabel jTituloTable;
    // End of variables declaration//GEN-END:variables
}
